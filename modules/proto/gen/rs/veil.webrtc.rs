// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SessionDescription {
    #[prost(enumeration="session_description::Type", tag="1")]
    pub r#type: i32,
    #[prost(string, tag="2")]
    pub sdp: ::prost::alloc::string::String,
}
/// Nested message and enum types in `SessionDescription`.
pub mod session_description {
    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
    #[repr(i32)]
    pub enum Type {
        SdpUnspecified = 0,
        Offer = 1,
        Answer = 2,
    }
    impl Type {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                Self::SdpUnspecified => "SDP_UNSPECIFIED",
                Self::Offer => "OFFER",
                Self::Answer => "ANSWER",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "SDP_UNSPECIFIED" => Some(Self::SdpUnspecified),
                "OFFER" => Some(Self::Offer),
                "ANSWER" => Some(Self::Answer),
                _ => None,
            }
        }
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct IceCandidate {
    #[prost(string, tag="1")]
    pub candidate: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub sdp_mid: ::prost::alloc::string::String,
    #[prost(uint32, tag="3")]
    pub sdp_mline_index: u32,
    #[prost(string, tag="4")]
    pub username_fragment: ::prost::alloc::string::String,
}
include!("veil.webrtc.serde.rs");
// @@protoc_insertion_point(module)